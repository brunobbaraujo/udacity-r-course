qplot(x = friend_count, data = pf)
library(ggplot2)
qplot(x = friend_count, data = pf)
pf = read.csv('pseudo_facebook.tsv',sep='\t')
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)+scale_x_log10()
library(gridExtra)
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)
p2 = qplot(x = friend_count, data = pf)+scale_x_log10()
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuos(breaks=seq(0,2000,200),lim=c(0,2000))
p1 = qplot(x = friend_count, data = pf)+scale_x_continuos(breaks=seq(0,2000,200),lim=c(0,2000))
p1 = qplot(x = friend_count, data = pf)+scale_x_continuos(breaks=seq(0,2000,200),lim=c(0,2000))
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,200),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10()
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10()
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(0,2000,400),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(1,2000,400),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(0.01,1000,400),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(0.01,1000,100),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0.01,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0.1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(1,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 50)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf, binwidth = 50)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf, binwidth = 50)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf, binwidth = 10)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf,binwidth=20)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt(limits = c(1,2000))
grid.arrange(p1,p2,p3,ncol=2)
p1 <- qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 <- qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 <- qplot(x = friend_count, data = pf)+scale_x_sqrt(limits = c(1,2000))
grid.arrange(p1,p2,p3,ncol=2)
p1 <- qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 <- qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 <- qplot(x = friend_count, data = pf)+scale_x_sqrt(limits = c(1,2000))
grid.arrange(p1,p2,p3,ncol=1)
pf = read.csv('pseudo_facebook.tsv',sep='\t')
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in==0,])/summary(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in = 0,])/summary(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,])/summary(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,])/summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,])
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)/summary(pf$mobile_check_in)
pf$mobile_check_in[pf$mobile_check_in == 0,]
summary(pf[pf$mobile_check_in == 0,])
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)/summary(pf$mobile_check_in)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)/summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)[0]
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)[1]
nrow(pf[pf$mobile_check_in == 0,]$mobile_check_in)/nrow(pf$mobile_check_in)
nrow(pf$mobile_check_in)
nrow(pf[pf$mobile_check_in == 0,]$mobile_check_in)/nrow(pf$mobile_check_in)
nrow(pf$mobile_check_in)
pf$mobile_check_in
nrow(pf[pf$mobile_check_in == 0,]$mobile_check_in)/nrow(pf)
nrow(pf)
nrow(pf[pf$mobile_check_in == 0,])/nrow(pf)
nrow(pf[pf$mobile_check_in == 1,])/nrow(pf)
rm(pf)
knitr::opts_chunk$set(echo = TRUE)
summary(diamonds)
load(diamonds)
data(diamonds)
summary(diamonds)
library(ggplot2)
library(ggplot2)
data("diamonds")
summary(diamonds)
str(diamonds)
head(diamonds)
by(diamonds$cut,diamonds$color,summary)
by(diamonds$color,diamonds$cut,summary)
summary(diamonds)
summary(diamonds)
?diamonds
qplot(x=price,data=diamonds)
qplot(x=price,data=diamonds,geom='bar',binwidth=500)
qplot(x=price,data=diamonds,geom='bar',binwidth=250)
qplot(x=price,data=diamonds,geom='bar',binwidth=500)
qplot(x=price,data=diamonds,binwidth=500)
qplot(x=price,data=diamonds,binwidth=500)
summary(diamonds)
qplot(x=price,data=diamonds,binwidth=500)
summary($price)
qplot(x=price,data=diamonds,binwidth=500)
summary(diamonds$price)
length(diamonds[diamonds$price<500,])
length(diamonds[diamonds$price<1000,])
length(diamonds[diamonds$price<10000,])
nrow(diamonds[diamonds$price<10000,])
nrow(diamonds[diamonds$price<1000,])
length(diamonds$price[diamonds$price<1000,])
length(diamonds[diamonds$price<1000,]$price)
length(diamonds[diamonds$price<500,]$price)
length(diamonds[diamonds$price<250,]$price)
length(diamonds[diamonds$price>15000,]$price)
length(diamonds[diamonds$price>=15000,]$price)
qplot(x=price,data=diamonds,limits=c(0,1000))
qplot(x=price,data=diamonds,xlim=c(0,1000))
qplot(x=price,data=diamonds,xlim=c(0,1000),binwidth=50)
qplot(x=price,data=diamonds,xlim=c(500,1000),binwidth=20)
qplot(x=price,data=diamonds,xlim=c(600,800),binwidth=20) + scale_x_continuous(breaks=seq(600,800,10))
qplot(x=price,data=diamonds,xlim=c(600,800),binwidth=20) + scale_x_continuous(limits = c(600,800),breaks=seq(600,800,10))
qplot(x=price,data=diamonds,xlim=c(600,800),binwidth=10) + scale_x_continuous(limits = c(600,800),breaks=seq(600,800,10))
qplot(x=price,data=diamonds,binwidth=10) + scale_x_continuous(limits = c(600,800),breaks=seq(600,800,10))
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
by(diamonds$price,diamonds$cut,summary)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
by(diamonds$price,diamonds$cut,mean)
by(diamonds$price,diamonds$cut,median)
by(diamonds$price,diamonds$cut,summary)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=50) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=100) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=250) + facet_wrap(~cut,scales="free_y")
library(ggplot2)
data("diamonds")
qplot(x=price,data=diamonds,binwidth=250) + scale_x_log10() + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=250) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=1) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.1) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.05) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.02) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.05) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~cut)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~cut)
by(diamonds$price,diamonds$cut,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~clarity)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~clarity)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~clarity)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
#qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
#qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
head(diamonds)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price/diamonds$carat,diamonds$color,summary)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price/diamonds$carat,diamonds$color,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=carat,data=diamonds,geom='freqpoly',binwidth=0.1)
qplot(x=carat,data=diamonds,geom='freqpoly',binwidth=0.2)
qplot(x=carat,data=diamonds,geom='freqpoly',binwidth=0.1)+scale_x_continuous(breaks=seq(0,2,0.1),limits = c(0,2))
library(tidyr)
install.packages(tidyr,dependencies = T)
install.packages("tidyr",dependencies = T)
library(tidyr)
?gather
setwd("~/R/udacity scripts/lesson3")
library(ggplot2)
data("diamonds")
df = read.csv('imports.tsv',sep='\t')
View(df)
library(dplyr)
library(tidyr)
gather(data = df,key = 0,value = ano)
df2 = gather(data = df,key = 0,value = ano)
View(df2)
View(df2)
View(df2)
df2 = gather(data = df,key = df$Imports.of.goods.and.services....of.GDP.,value = GDP_tx)
View(df2)
df2 = gather(data = df)
names(df[1]) <- "Country"
df2 = gather(data = df,key="ano","GDP",2:)
df2 = gather(data = df,key="ano","GDP",2:length(df))
View(df2)
df2$ano = replace(df2$ano,"X","")
View(df2)
df2$ano = replace(df2$ano,"X","")[2:,]
df2$ano = replace(df2$ano,"X","")[2:]
df2$ano = replace(df2$ano,"X","")[2:length(df2$ano)]
df2$ano = replace(df2$ano,"X","")[1:length(df2$ano)]
View(df2)
df2$ano = extract(df2,ano)
df2$ano = extract(df2,ano,ano)
df2$ano = gsub("X", "", paste(df2$ano))
View(df2)
str(df2)
df2$ano = integer(df2$ano)
df2$ano = as.integer(df2$ano)
str(df2)
df2$GDP = as.double(df2$GDP)
df2$GDP = gsub('"', "", paste(df2$GDP))
df = read.csv('imports.tsv',sep='\t')
df = gather(data = df,key="ano","GDP",2:length(df))
df2$ano = gsub("X", "", paste(df2$ano))
df2$ano = as.integer(df2$ano)
df2$GDP = gsub('"', "", paste(df2$GDP))
#df2$GDP = as.double(df2$GDP)
View(df2)
View(df)
#df2$GDP = as.double(df2$GDP)
df2$GDP = as.double(df2$GDP)
View(df)
rm(df2)
df = read.csv('imports.tsv',sep='\t')
df = gather(data = df,key="ano","GDP",2:length(df))
df2$ano = gsub("X", "", paste(df2$ano))
df = read.csv('imports.tsv',sep='\t')
df = gather(data = df,key="ano","GDP",2:length(df))
df$ano = gsub("X", "", paste(df$ano))
df$ano = as.integer(df$ano)
df$GDP = gsub('"', "", paste(df$GDP))
df$GDP = gsub(',', ".", paste(df$GDP))
df$GDP = as.double(df$GDP)
View(df)
df = read.csv('imports.tsv',sep='\t')
df = gather(data = df,key="ano","GDP",2:length(df))
df$ano = gsub("X", "", paste(df$ano))
df$ano = as.integer(df$ano)
df$GDP = gsub('"', "", paste(df$GDP))
df$GDP = gsub(',', ".", paste(df$GDP))
df$GDP = as.double(df$GDP)
df = subset(df,!is.na(df$GDP))
View(df)
df = read.csv('imports.tsv',sep='\t')
names(df)[1] = "country"
df = gather(data = df,key="ano","GDP",2:length(df))
df$ano = gsub("X", "", paste(df$ano))
df$ano = as.integer(df$ano)
df$GDP = gsub('"', "", paste(df$GDP))
df$GDP = gsub(',', ".", paste(df$GDP))
df$GDP = as.double(df$GDP)
df = subset(df,!is.na(df$GDP))
df = read.csv('imports.tsv',sep='\t')
names(df)[1] = "country"
df = gather(data = df,key="year","GDPP",2:length(df))
df$ano = gsub("X", "", paste(df$ano))
df = read.csv('imports.tsv',sep='\t')
names(df)[1] = "country"
df = gather(data = df,key="year","GDPP",2:length(df))
df$year = gsub("X", "", paste(df$year))
df$year = as.integer(df$year)
df$GDP = gsub('"', "", paste(df$GDP))
df$GDP = gsub(',', ".", paste(df$GDP))
df$GDP = as.double(df$GDP)
df = subset(df,!is.na(df$GDP))
df = read.csv('imports.tsv',sep='\t')
names(df)[1] = "country"
df = gather(data = df,key="year","GDP",2:length(df))
df$year = gsub("X", "", paste(df$year))
df$year = as.integer(df$year)
df$GDP = gsub('"', "", paste(df$GDP))
df$GDP = gsub(',', ".", paste(df$GDP))
df$GDP = as.double(df$GDP)
df = subset(df,!is.na(df$GDP))
View(df)
qplot(x = gdp,data = df)
df = subset(df,!is.na(df$gdp))
df = read.csv('imports.tsv',sep='\t')
names(df)[1] = "country"
df = gather(data = df,key="year","gdp",2:length(df))
df$year = gsub("X", "", paste(df$year))
df$year = as.integer(df$year)
df$gdp = gsub('"', "", paste(df$gdp))
df$gdp = gsub(',', ".", paste(df$gdp))
df$gdp = as.double(df$gdp)
df = subset(df,!is.na(df$gdp))
qplot(x = gdp,data = df)
qplot(x = gdp,data = df,binwidth = 1)
qplot(x = gdp,data = df,binwidth = 1) + scale_x_continuous(limits=c(10,50),breaks=seq(10,50,1))
```{r,fig.width=12}
qplot(x = gdp,data = df,binwidth = 1) + scale_x_continuous(limits=c(10,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano > 2004],binwidth = 1) + scale_x_continuous(limits=c(10,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano > 2004,],binwidth = 1) + scale_x_continuous(limits=c(10,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano >= 2004,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano >= "2004,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano >= "2004",],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano >= "2004",],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano >= 2004,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$ano >= 2000,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
str(df)
qplot(x = gdp,data = df[df$ano >= 1960,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df,binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = subset(df,df$ano > 1990),binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = subset(df,ano > 1990),binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
View(df)
qplot(x = gdp,data = subset(df,df$ano > 1900),binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
df$ano > 1900
df$ano
qplot(x = gdp,data = df[df$year >= 1960,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$year >= 2000,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
qplot(x = gdp,data = df[df$year < 1980,],binwidth = 1) #+ scale_x_continuous(limits=c(0,50),breaks=seq(10,50,1))
library(gridExtra)
grid.arrange(p1,p2)
p1 = qplot(x = gdp,data = df[df$year < 1980,],binwidth = 1)
p2 = qplot(x = gdp,data = df[df$year > 2000,],binwidth = 1)
grid.arrange(p1,p2)
p3 = qplot(y = gdp,data = df[sapply(df$country,tolower) = "brazil"])
p3 <- qplot(y = gdp,data = df[sapply(df$country,tolower) = "brazil",])
p3 <- qplot(y = gdp,data = df[sapply(df$country,tolower) == "brazil",])
grid.arrange(p1,p2,p3)
p3 <- qplot(y = gdp,data = df[sapply(df$country,tolower) == "brazil",],geom='boxplot')
grid.arrange(p1,p2,p3)
install.packages("readxl")
dfb = read.csv('birthdaysExample.csv')
rm()
rm(all)
rm(objects())
rm(p1,p2,p3,df,diamonds)
View(dfb)
dfb1 = strptime(dfb,"%m/%d/%y")
strptime(dfb$dates,"%m/%d/%y")
z = strptime(dfb$dates,"%m/%d/%y")
head(z)
View(z)
View(z)
as.data.frame(z)
z = as.data.frame(z)
View(z)
names(z)[1] <- "dates"
z$day = day(z$dates)
z$day = strftime(z$dates,"%d")
z$month = strftime(z$dates,"%m")
length(z[z$day == 21 & z$month == 11,])
z[z$day == 21 & z$month == 11,]
z %>% group_by(month) %>% summarise(count)
z %>% group_by(month) %>% summarise(count())
z %>% group_by(month) %>% summarise(count(z$dates))
z %>% group_by(month) %>% count()
z %>% group_by(month) %>% count() %>% arrange(desc(n))
z %>% group_by(day) %>% count() %>% arrange(desc(n))
rm(z)
dfb = read.csv('birthdaysExample.csv')
dfb = as.data.frame(strptime(dfb$dates,"%m/%d/%y"))
names(dfb)[1] <- "dates"
dfb$day = strftime(dfb$dates,"%d")
dfb$month = strftime(dfb$dates,"%m")
# People with same birthday
same_day = length(dfb[dfb$day == 21 & dfb$month == 11,])
# Months with most birthdays
dfb %>% group_by(month) %>% count() %>% arrange
# Days with most birthdays
dfb %>% group_by(month) %>% count() %>% arrange
dfb = read.csv('birthdaysExample.csv')
dfb = as.data.frame(strptime(dfb$dates,"%m/%d/%y"))
names(dfb)[1] <- "dates"
dfb$day = strftime(dfb$dates,"%d")
dfb$month = strftime(dfb$dates,"%m")
# People with same birthday
same_day = length(dfb[dfb$day == 21 & dfb$month == 11,])
# Months with most birthdays
dfb %>% group_by(month) %>% count() %>% arrange
# Days with most birthdays
dfb %>% group_by(day) %>% count() %>% arrange
dfb = read.csv('birthdaysExample.csv')
dfb = as.data.frame(strptime(dfb$dates,"%m/%d/%y"))
names(dfb)[1] <- "dates"
dfb$day = strftime(dfb$dates,"%d")
dfb$month = strftime(dfb$dates,"%m")
# People with same birthday
same_day = length(dfb[dfb$day == 21 & dfb$month == 11,])
# Months with most birthdays
dfb %>% group_by(month) %>% count() %>% arrange(desc(n))
# Days with most birthdays
dfb %>% group_by(day) %>% count() %>% arrange(desc(n))
dfb = read.csv('birthdaysExample.csv')
dfb = as.data.frame(strptime(dfb$dates,"%m/%d/%y"))
names(dfb)[1] <- "dates"
dfb$day = strftime(dfb$dates,"%d")
dfb$month = strftime(dfb$dates,"%m")
# People with same birthday
same_day = length(dfb[dfb$day == 21 & dfb$month == 11,])
same_day
# Months with most birthdays
dfb %>% group_by(month) %>% count() %>% arrange(desc(n))
# Days with most birthdays
dfb %>% group_by(day) %>% count() %>% arrange(desc(n))
dfb_days = dfb %>% group_by(dates) %>% count()
qplot(x = dates, y = n, data = dfb_days)
rm(dfb_days)
dfb$day+'/'+dfb$month+'/00'
paste(c(dfb$day,dfb$month,"00"),sep = '/')
as.data.frame(paste(c(dfb$day,dfb$month,"00"),sep = '/'))
as.data.frame(paste(dfb$day,dfb$month,"00",sep = '/'))
dfb$new_date = strptime((paste(dfb$day,dfb$month,"00",sep = '/')),"%d/%m/%y")
head(dfb)
dfb_doy = dfb %>% group_by(new_date) %>% count()
# Birthdays plot
dfb$new_date = strptime((paste(dfb$day,dfb$month,"00",sep = '/')),"%d/%m/%y")
dfb_doy = dfb %>% group_by(new_date) %>% count()
# Birthdays plot
dfb$new_date = as.data.frame(strptime((paste(dfb$day,dfb$month,"00",sep = '/')),"%d/%m/%y"))
dfb_doy = dfb %>% group_by(new_date) %>% count()
# Birthdays plot
dfb$new_date = as.Date(strptime((paste(dfb$day,dfb$month,"00",sep = '/')),"%d/%m/%y"))
dfb_doy = dfb %>% group_by(new_date) %>% count()
qplot(x = dates, y = n, data = dfb_doy)
qplot(x = new_date, y = n, data = dfb_doy)
qplot(x = new_date, data = dfb_doy)
qplot(x = new_date, data = dfb_doy,binwidth=365)
qplot(x = new_date, data = dfb_doy,binwidth=1)
