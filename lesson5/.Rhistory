qplot(x = friend_count, data = pf)
library(ggplot2)
qplot(x = friend_count, data = pf)
pf = read.csv('pseudo_facebook.tsv',sep='\t')
qplot(x = friend_count, data = pf)
qplot(x = friend_count, data = pf)+scale_x_log10()
library(gridExtra)
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)
p2 = qplot(x = friend_count, data = pf)+scale_x_log10()
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuos(breaks=seq(0,2000,200),lim=c(0,2000))
p1 = qplot(x = friend_count, data = pf)+scale_x_continuos(breaks=seq(0,2000,200),lim=c(0,2000))
p1 = qplot(x = friend_count, data = pf)+scale_x_continuos(breaks=seq(0,2000,200),lim=c(0,2000))
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,200),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10()
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10()
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(0,2000,400),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(1,2000,400),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(0.01,1000,400),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(breaks=seq(0.01,1000,100),limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0.01,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(0.1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(1,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 50)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf, binwidth = 50)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf, binwidth = 50)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf, binwidth = 10)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf,binwidth=20)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt()
grid.arrange(p1,p2,p3,ncol=2)
p1 = qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 = qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 = qplot(x = friend_count, data = pf)+scale_x_sqrt(limits = c(1,2000))
grid.arrange(p1,p2,p3,ncol=2)
p1 <- qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 <- qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 <- qplot(x = friend_count, data = pf)+scale_x_sqrt(limits = c(1,2000))
grid.arrange(p1,p2,p3,ncol=2)
p1 <- qplot(x = friend_count, data = pf, binwidth = 100)+scale_x_continuous(breaks=seq(0,2000,400),limits = c(0,2000))
p2 <- qplot(x = friend_count, data = pf)+scale_x_log10(limits = c(1,2000))
p3 <- qplot(x = friend_count, data = pf)+scale_x_sqrt(limits = c(1,2000))
grid.arrange(p1,p2,p3,ncol=1)
pf = read.csv('pseudo_facebook.tsv',sep='\t')
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf$mobile_check_in)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in==0,])/summary(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in = 0,])/summary(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,])/summary(pf)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,])/summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,])
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)/summary(pf$mobile_check_in)
pf$mobile_check_in[pf$mobile_check_in == 0,]
summary(pf[pf$mobile_check_in == 0,])
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)/summary(pf$mobile_check_in)
pf$mobile_check_in <- ifelse(pf$mobile_likes > 0,1,0)
pf$mobile_check_in <- factor(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)/summary(pf$mobile_check_in)
summary(pf$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)[0]
summary(pf[pf$mobile_check_in == 0,]$mobile_check_in)[1]
nrow(pf[pf$mobile_check_in == 0,]$mobile_check_in)/nrow(pf$mobile_check_in)
nrow(pf$mobile_check_in)
nrow(pf[pf$mobile_check_in == 0,]$mobile_check_in)/nrow(pf$mobile_check_in)
nrow(pf$mobile_check_in)
pf$mobile_check_in
nrow(pf[pf$mobile_check_in == 0,]$mobile_check_in)/nrow(pf)
nrow(pf)
nrow(pf[pf$mobile_check_in == 0,])/nrow(pf)
nrow(pf[pf$mobile_check_in == 1,])/nrow(pf)
rm(pf)
knitr::opts_chunk$set(echo = TRUE)
summary(diamonds)
load(diamonds)
data(diamonds)
summary(diamonds)
library(ggplot2)
library(ggplot2)
data("diamonds")
summary(diamonds)
str(diamonds)
head(diamonds)
by(diamonds$cut,diamonds$color,summary)
by(diamonds$color,diamonds$cut,summary)
summary(diamonds)
summary(diamonds)
?diamonds
qplot(x=price,data=diamonds)
qplot(x=price,data=diamonds,geom='bar',binwidth=500)
qplot(x=price,data=diamonds,geom='bar',binwidth=250)
qplot(x=price,data=diamonds,geom='bar',binwidth=500)
qplot(x=price,data=diamonds,binwidth=500)
qplot(x=price,data=diamonds,binwidth=500)
summary(diamonds)
qplot(x=price,data=diamonds,binwidth=500)
summary($price)
qplot(x=price,data=diamonds,binwidth=500)
summary(diamonds$price)
length(diamonds[diamonds$price<500,])
length(diamonds[diamonds$price<1000,])
length(diamonds[diamonds$price<10000,])
nrow(diamonds[diamonds$price<10000,])
nrow(diamonds[diamonds$price<1000,])
length(diamonds$price[diamonds$price<1000,])
length(diamonds[diamonds$price<1000,]$price)
length(diamonds[diamonds$price<500,]$price)
length(diamonds[diamonds$price<250,]$price)
length(diamonds[diamonds$price>15000,]$price)
length(diamonds[diamonds$price>=15000,]$price)
qplot(x=price,data=diamonds,limits=c(0,1000))
qplot(x=price,data=diamonds,xlim=c(0,1000))
qplot(x=price,data=diamonds,xlim=c(0,1000),binwidth=50)
qplot(x=price,data=diamonds,xlim=c(500,1000),binwidth=20)
qplot(x=price,data=diamonds,xlim=c(600,800),binwidth=20) + scale_x_continuous(breaks=seq(600,800,10))
qplot(x=price,data=diamonds,xlim=c(600,800),binwidth=20) + scale_x_continuous(limits = c(600,800),breaks=seq(600,800,10))
qplot(x=price,data=diamonds,xlim=c(600,800),binwidth=10) + scale_x_continuous(limits = c(600,800),breaks=seq(600,800,10))
qplot(x=price,data=diamonds,binwidth=10) + scale_x_continuous(limits = c(600,800),breaks=seq(600,800,10))
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
by(diamonds$price,diamonds$cut,summary)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut)
by(diamonds$price,diamonds$cut,mean)
by(diamonds$price,diamonds$cut,median)
by(diamonds$price,diamonds$cut,summary)
qplot(x=price,data=diamonds,binwidth=10) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=50) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=100) + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=250) + facet_wrap(~cut,scales="free_y")
library(ggplot2)
data("diamonds")
qplot(x=price,data=diamonds,binwidth=250) + scale_x_log10() + facet_wrap(~cut,scales="free_y")
qplot(x=price,data=diamonds,binwidth=250) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=1) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.1) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.05) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.02) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(x=price,data=diamonds,binwidth=0.05) + facet_wrap(~cut,scales="free_y") + scale_x_log10()
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~cut)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~cut)
by(diamonds$price,diamonds$cut,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~clarity)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~clarity)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~clarity)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$clarity,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
#qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
#qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
head(diamonds)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price/diamonds$carat,diamonds$color,summary)
qplot(y=price/carat,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price/diamonds$carat,diamonds$color,summary)
qplot(y=price,data=diamonds,geom='boxplot') + facet_wrap(~color)
by(diamonds$price,diamonds$color,summary)
qplot(y=carat,data=diamonds,geom='freqpoly',binwidth=0.1)
qplot(x=carat,data=diamonds,geom='freqpoly',binwidth=0.2)
qplot(x=carat,data=diamonds,geom='freqpoly',binwidth=0.1)+scale_x_continuous(breaks=seq(0,2,0.1),limits = c(0,2))
library(tidyr)
install.packages(tidyr,dependencies = T)
install.packages("tidyr",dependencies = T)
library(tidyr)
?gather
setwd("~/R/udacity scripts/lesson5")
# Change the id from and int to a factor
yo$id <- factor(yo$id)
yo <- read.csv("yogurt.csv")
str(yo)
# Change the id from and int to a factor
yo$id <- factor(yo$id)
str(yo)
# Make histogram of prices
ggplot(aes(price), data = yo) +
geom_histogram(binwidth = 10)
library(ggplot2)
library(dplyr)
# Make histogram of prices
ggplot(aes(price), data = yo) +
geom_histogram(binwidth = 10)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada + plain + mixed.berry)
ggplot(aes(x = 60*round(time/60), y = price), data = yo) +
geom_point(alpha=1/30,position = position_jitter(h=0.1), color = 'orange') +
geom_line(stat = 'summary', fun.y = mean, linetype = 2) +
ylim(30,70)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
set.seed(4230)
sample.ids <- sample(levels(yo$id),16)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
set.seed(4230)
sample.ids <- sample(levels(yo$id),16)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
set.seed(3125)
sample.ids <- sample(levels(yo$id),16)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
set.seed(3556)
sample.ids <- sample(levels(yo$id),16)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
set.seed(3822)
sample.ids <- sample(levels(yo$id),16)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
View(yo)
set.seed(3815)
sample.ids <- sample(levels(yo$id),16)
ggplot(aes(x = time, y = price),
data = subset(yo,yo$id %in% sample.ids)) +
facet_wrap( ~id ) +
geom_line() +
geom_point(aes(size=all.purchases), pch = 1)
