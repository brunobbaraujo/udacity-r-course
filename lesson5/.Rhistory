load(diamonds)
library(ggplot2)
load(diamonds)
data("diamonds")
str(diamonds)
ggplot(data=diamonds)+geom_bar(mapping = aes(x=cut))
ggplot(data=diamonds)+geom_histogram(mapping = aes(x=cut),binwidth = 0.25)
ggplot(data=diamonds)+geom_histogram(mapping = aes(x=carat), binwidth = 0.25)
ggplot(data=diamonds)+geom_histogram(mapping = aes(x=carat), binwidth = 0.1)
ggplot(data=diamonds)+geom_histogram(mapping = aes(x=carat), binwidth = 0.5)
ggplot(data=diamonds, mapping=aes(x=carat,colours=cut))+geom_freqpoly(binwidth=0.2)
ggplot(data=diamonds, mapping=aes(x=carat,colour=cut))+geom_freqpoly(binwidth=0.2)
ggplot(data=diamonds, mapping=aes(x=log10(carat),colour=cut))+geom_freqpoly(binwidth=0.2)
ggplot(data=diamonds, mapping=aes(x=log10(carat),colour=cut))+geom_freqpoly(binwidth=0.1)
setwd("~/R/udacity scripts/lesson4")
library(ggplot2)
data("diamonds")
str(diamonds)
ggplot(aes(x=x,y=price),data=diamonds) +
geom_point(alpha=1/40,position = position_jitter(h=0.1)) +
xlim(3,quantile(diamonds$x,0.90)) +
ylim(0,quantile(diamonds$price,0.90))
with(diamonds,cor.test(x = x, y = price, method = 'pearson'))
with(diamonds,cor.test(x = y, y = price, method = 'pearson'))
with(diamonds,cor.test(x = z, y = price, method = 'pearson'))
ggplot(aes(x=depth,y=price),data=diamonds) +
geom_point(alpha=1/100) +
scale_x_continuous(breaks=seq(40,80,2))
with(diamonds,cor.test(x = depth, y = price, method = 'pearson'))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/40,position = position_jitter(h=0.1)) +
xlim(3,quantile(diamonds$x,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/40,position = position_jitter(h=0.1)) +
xlim(0,quantile(diamonds$carat,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/20,position = position_jitter(h=0.1)) +
xlim(0,quantile(diamonds$carat,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/20,position = 'jitter') +
xlim(0,quantile(diamonds$carat,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/30,position = 'jitter') +
xlim(0,quantile(diamonds$carat,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/40,position = 'jitter') +
xlim(0,quantile(diamonds$carat,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point(alpha=1/40,position = 'jitter') +
xlim(0,quantile(diamonds$carat,0.99)) +
ylim(0,quantile(diamonds$price,0.99))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x=volume,y=price),data=diamonds) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
df <- read.csv('fraud_small.tsv',sep='\t',nrows = 5000)
library(ggplot2)
library(gridExtra)
qplot(x='',xlab = 'fraud',y=konduto_score,
data=subset(df, df$konduto_recommendation %in% c('APPROVE','DECLINE','REVIEW') & df$status == 'PAID'),
geom='boxplot') +
facet_grid(konduto_recommendation ~ is_chargeback) +
coord_cartesian(ylim=c(0,0.7))
ggplot(aes(y=konduto_score,x=sift_score),data = df[df$konduto_score>=0,]) +
geom_point(alpha=1/30,position = 'jitter') +
ylim(0,0.4)
# 0. Read Data
library(ggplot2)
data("diamonds")
pf <- diamonds
rm(diamonds)
# 1. Histogram Price prices facet by color
ggplot(aes(x = price), data = pf) +
geom_histogram(aes(color = cut)) +
scale_x_log10() +
facet_wrap(~ color) +
scale_fill_brewer(type = 'qual')
# 5. Create a line graph of the median proportion of
# friendships initiated ('prop_initiated') vs.
# tenure and color the line segment by
# year_joined.bucket.
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012,2014), right = TRUE)
# 5. Create a line graph of the median proportion of
# friendships initiated ('prop_initiated') vs.
# tenure and color the line segment by
# year_joined.bucket.
pf$year_joined <- floor(2014 - pf$tenure/365)
# 5. Create a line graph of the median proportion of
# friendships initiated ('prop_initiated') vs.
# tenure and color the line segment by
# year_joined.bucket.
pf$year_joined <- floor(2014 - pf$tenure/365)
View(pf)
View(pf)
setwd("~/R/udacity scripts/lesson5")
setwd("~/R/udacity scripts/lesson5")
pf <- read.csv("pseudo_facebook.tsv",sep="\t")
# 5. Create a line graph of the median proportion of
# friendships initiated ('prop_initiated') vs.
# tenure and color the line segment by
# year_joined.bucket.
pf$year_joined <- floor(2014 - pf$tenure/365)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009, 2011, 2012,2014), right = TRUE)
pf$prop_initiated = with(pf, friendships_initiated/friend_count)
ggplot(aes(x = tenure, y = prop_initiated)) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = "summary", fun.y = median)
